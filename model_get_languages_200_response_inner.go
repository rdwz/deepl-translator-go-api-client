/*
DeepL API

The DeepL API provides programmatic access to DeepLâ€™s machine translation technology.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetLanguages200ResponseInner struct for GetLanguages200ResponseInner
type GetLanguages200ResponseInner struct {
	// The language code of the given language.
	Language string `json:"language"`
	// Name of the language in English.
	Name string `json:"name"`
	// Denotes formality support in case of a target language listing.
	SupportsFormality *bool `json:"supports_formality,omitempty"`
}

// NewGetLanguages200ResponseInner instantiates a new GetLanguages200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLanguages200ResponseInner(language string, name string) *GetLanguages200ResponseInner {
	this := GetLanguages200ResponseInner{}
	this.Language = language
	this.Name = name
	return &this
}

// NewGetLanguages200ResponseInnerWithDefaults instantiates a new GetLanguages200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLanguages200ResponseInnerWithDefaults() *GetLanguages200ResponseInner {
	this := GetLanguages200ResponseInner{}
	return &this
}

// GetLanguage returns the Language field value
func (o *GetLanguages200ResponseInner) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *GetLanguages200ResponseInner) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *GetLanguages200ResponseInner) SetLanguage(v string) {
	o.Language = v
}

// GetName returns the Name field value
func (o *GetLanguages200ResponseInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetLanguages200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetLanguages200ResponseInner) SetName(v string) {
	o.Name = v
}

// GetSupportsFormality returns the SupportsFormality field value if set, zero value otherwise.
func (o *GetLanguages200ResponseInner) GetSupportsFormality() bool {
	if o == nil || o.SupportsFormality == nil {
		var ret bool
		return ret
	}
	return *o.SupportsFormality
}

// GetSupportsFormalityOk returns a tuple with the SupportsFormality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLanguages200ResponseInner) GetSupportsFormalityOk() (*bool, bool) {
	if o == nil || o.SupportsFormality == nil {
		return nil, false
	}
	return o.SupportsFormality, true
}

// HasSupportsFormality returns a boolean if a field has been set.
func (o *GetLanguages200ResponseInner) HasSupportsFormality() bool {
	if o != nil && o.SupportsFormality != nil {
		return true
	}

	return false
}

// SetSupportsFormality gets a reference to the given bool and assigns it to the SupportsFormality field.
func (o *GetLanguages200ResponseInner) SetSupportsFormality(v bool) {
	o.SupportsFormality = &v
}

func (o GetLanguages200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["language"] = o.Language
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.SupportsFormality != nil {
		toSerialize["supports_formality"] = o.SupportsFormality
	}
	return json.Marshal(toSerialize)
}

type NullableGetLanguages200ResponseInner struct {
	value *GetLanguages200ResponseInner
	isSet bool
}

func (v NullableGetLanguages200ResponseInner) Get() *GetLanguages200ResponseInner {
	return v.value
}

func (v *NullableGetLanguages200ResponseInner) Set(val *GetLanguages200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLanguages200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLanguages200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLanguages200ResponseInner(val *GetLanguages200ResponseInner) *NullableGetLanguages200ResponseInner {
	return &NullableGetLanguages200ResponseInner{value: val, isSet: true}
}

func (v NullableGetLanguages200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLanguages200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


