/*
DeepL API

The DeepL API provides programmatic access to DeepLâ€™s machine translation technology.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListGlossaryLanguages200Response struct for ListGlossaryLanguages200Response
type ListGlossaryLanguages200Response struct {
	// The list of supported languages
	SupportedLanguages []ListGlossaryLanguages200ResponseSupportedLanguagesInner `json:"supported_languages,omitempty"`
}

// NewListGlossaryLanguages200Response instantiates a new ListGlossaryLanguages200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListGlossaryLanguages200Response() *ListGlossaryLanguages200Response {
	this := ListGlossaryLanguages200Response{}
	return &this
}

// NewListGlossaryLanguages200ResponseWithDefaults instantiates a new ListGlossaryLanguages200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListGlossaryLanguages200ResponseWithDefaults() *ListGlossaryLanguages200Response {
	this := ListGlossaryLanguages200Response{}
	return &this
}

// GetSupportedLanguages returns the SupportedLanguages field value if set, zero value otherwise.
func (o *ListGlossaryLanguages200Response) GetSupportedLanguages() []ListGlossaryLanguages200ResponseSupportedLanguagesInner {
	if o == nil || o.SupportedLanguages == nil {
		var ret []ListGlossaryLanguages200ResponseSupportedLanguagesInner
		return ret
	}
	return o.SupportedLanguages
}

// GetSupportedLanguagesOk returns a tuple with the SupportedLanguages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListGlossaryLanguages200Response) GetSupportedLanguagesOk() ([]ListGlossaryLanguages200ResponseSupportedLanguagesInner, bool) {
	if o == nil || o.SupportedLanguages == nil {
		return nil, false
	}
	return o.SupportedLanguages, true
}

// HasSupportedLanguages returns a boolean if a field has been set.
func (o *ListGlossaryLanguages200Response) HasSupportedLanguages() bool {
	if o != nil && o.SupportedLanguages != nil {
		return true
	}

	return false
}

// SetSupportedLanguages gets a reference to the given []ListGlossaryLanguages200ResponseSupportedLanguagesInner and assigns it to the SupportedLanguages field.
func (o *ListGlossaryLanguages200Response) SetSupportedLanguages(v []ListGlossaryLanguages200ResponseSupportedLanguagesInner) {
	o.SupportedLanguages = v
}

func (o ListGlossaryLanguages200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SupportedLanguages != nil {
		toSerialize["supported_languages"] = o.SupportedLanguages
	}
	return json.Marshal(toSerialize)
}

type NullableListGlossaryLanguages200Response struct {
	value *ListGlossaryLanguages200Response
	isSet bool
}

func (v NullableListGlossaryLanguages200Response) Get() *ListGlossaryLanguages200Response {
	return v.value
}

func (v *NullableListGlossaryLanguages200Response) Set(val *ListGlossaryLanguages200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListGlossaryLanguages200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListGlossaryLanguages200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGlossaryLanguages200Response(val *ListGlossaryLanguages200Response) *NullableListGlossaryLanguages200Response {
	return &NullableListGlossaryLanguages200Response{value: val, isSet: true}
}

func (v NullableListGlossaryLanguages200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGlossaryLanguages200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


