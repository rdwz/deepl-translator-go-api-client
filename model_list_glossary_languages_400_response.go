/*
DeepL API

The DeepL API provides programmatic access to DeepLâ€™s machine translation technology.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListGlossaryLanguages400Response struct for ListGlossaryLanguages400Response
type ListGlossaryLanguages400Response struct {
	// Generic description of the error.
	Message *string `json:"message,omitempty"`
	// More specific description of the error.
	Detail *string `json:"detail,omitempty"`
}

// NewListGlossaryLanguages400Response instantiates a new ListGlossaryLanguages400Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListGlossaryLanguages400Response() *ListGlossaryLanguages400Response {
	this := ListGlossaryLanguages400Response{}
	return &this
}

// NewListGlossaryLanguages400ResponseWithDefaults instantiates a new ListGlossaryLanguages400Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListGlossaryLanguages400ResponseWithDefaults() *ListGlossaryLanguages400Response {
	this := ListGlossaryLanguages400Response{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ListGlossaryLanguages400Response) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListGlossaryLanguages400Response) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ListGlossaryLanguages400Response) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ListGlossaryLanguages400Response) SetMessage(v string) {
	o.Message = &v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ListGlossaryLanguages400Response) GetDetail() string {
	if o == nil || o.Detail == nil {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListGlossaryLanguages400Response) GetDetailOk() (*string, bool) {
	if o == nil || o.Detail == nil {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ListGlossaryLanguages400Response) HasDetail() bool {
	if o != nil && o.Detail != nil {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ListGlossaryLanguages400Response) SetDetail(v string) {
	o.Detail = &v
}

func (o ListGlossaryLanguages400Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Detail != nil {
		toSerialize["detail"] = o.Detail
	}
	return json.Marshal(toSerialize)
}

type NullableListGlossaryLanguages400Response struct {
	value *ListGlossaryLanguages400Response
	isSet bool
}

func (v NullableListGlossaryLanguages400Response) Get() *ListGlossaryLanguages400Response {
	return v.value
}

func (v *NullableListGlossaryLanguages400Response) Set(val *ListGlossaryLanguages400Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListGlossaryLanguages400Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListGlossaryLanguages400Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGlossaryLanguages400Response(val *ListGlossaryLanguages400Response) *NullableListGlossaryLanguages400Response {
	return &NullableListGlossaryLanguages400Response{value: val, isSet: true}
}

func (v NullableListGlossaryLanguages400Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGlossaryLanguages400Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


